<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:ns1="*"
					   width="1024" height="768" minWidth="800" minHeight="600"
					   creationComplete="applicationReady(event)">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<fx:XMLList id="menuXML">
			<menuitem label="File">
				<menuitem label="SubMenuItem A-1" enabled="False"/>
				<menuitem label="SubMenuItem A-2">
					<menuitem label="MenuItem A-2-1" toggled="true" type="check"/>
					<menuitem label="MenuItem A-2-2" icon="myTopIcon" toggled="false" type="check"/>
				</menuitem>
			</menuitem>
			<menuitem label="Edit">
				<menuitem label="SubMenuItem D-1" groupName="one" type="radio"/>
				<menuitem label="SubMenuItem D-2" groupName="one" toggled="true" type="radio"/>
				<menuitem label="SubMenuItem D-3" groupName="one" type="radio"/>
			</menuitem>
			<menuitem label="Window">
				<menuitem label="SubMenuItem D-1" groupName="one" type="radio"/>
			</menuitem>
		</fx:XMLList>
	</fx:Declarations>
	<!--
	<fx:Style source="style.css"/>
	-->
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		global {
			font-size: 10px;
		}
		
	</fx:Style>
	
	<mx:MenuBar left="0" right="0" bottom="0" height="25"></mx:MenuBar>
	<mx:ProgressBar left="10" bottom="4" width="152" color="#000000" enabled="true" fontSize="11"
					indeterminate="true" labelPlacement="center"/>
	<s:Panel id="pnl_timeline" left="143" right="10" bottom="30" height="155" enabled="true"
			 fontFamily="Arial" title="Timeline">
		<s:layout>
			<s:ConstraintLayout/>
		</s:layout>
		<s:controlBarContent/>
		<ns1:TestComponent id="timeline"/>
		<s:Button id="play_btn" x="294" y="-28" width="40" height="24" label="&gt;&gt;"
				  enabled="true" iconPlacement="left"/>
		<s:Button id="play_btn1" x="150" y="-28" width="40" height="24" label="&lt;" enabled="true"
				  iconPlacement="left"/>
		<s:Button id="play_btn2" x="104" y="-28" width="40" height="24" label="&lt;&lt;"
				  enabled="true" iconPlacement="left"/>
		<s:Button id="play_btn0" x="245" y="-28" width="40" height="24" label="&gt;" enabled="true"
				  iconPlacement="left"/>
		<s:ToggleButton x="198" y="-28" width="39" height="24" label="&gt;"/>

	</s:Panel>
	
	<mx:MenuBar id="menuMain" left="0" right="0" top="0" dataProvider="{menuXML}" fontWeight="bold"
				labelField="@label"/>
	
	<!-- Left-column Accordion component -->
	<mx:Accordion left="10" top="30" bottom="193" width="128">
		<s:NavigatorContent width="100%" height="100%" label="Primitives">
			<s:Button id="btn_poly_create" x="10" y="10" width="50" height="50" label="Rect"
					  click="btn_poly_onClick(event)"/>
			<s:Button id="btn_donut_create" x="10" y="68" width="50" height="50" label="Donut"/>
			<s:Button id="btn_circ_create" x="68" y="10" width="50" height="50" label="Circle"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Effects">
		</s:NavigatorContent>
	</mx:Accordion>
	
	<!-- Right-column properties tab component -->
	<mx:TabNavigator right="9" top="25" width="191" height="551">
		
		<!-- First tab -->
		<s:NavigatorContent width="100%" height="100%" label="List">
			<s:DataGrid id="properties_grid" y="0" left="0" width="100%" height="100%"
						requestedRowCount="4">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn dataField="dataField1" headerText="Column 1" width="70"></s:GridColumn>
						<s:GridColumn dataField="dataField2" headerText="Column 2" width="120"></s:GridColumn>
					</s:ArrayList>
				</s:columns>
				<s:typicalItem>
					<fx:Object dataField1="Sample Data" dataField2="Sample Data"></fx:Object>
				</s:typicalItem>
				<s:ArrayList>
					<fx:Object dataField1="data1" dataField2="data1"></fx:Object>
					<fx:Object dataField1="data2" dataField2="data2"></fx:Object>
					<fx:Object dataField1="data3" dataField2="data3"></fx:Object>
					<fx:Object dataField1="data4" dataField2="data4"></fx:Object>
				</s:ArrayList>
			</s:DataGrid>
		</s:NavigatorContent>
		
		<!-- Second tab -->
		<s:NavigatorContent width="100%" height="100%" label="Properties">
			<mx:ColorPicker x="142" y="36" width="37" selectedColor="#FF0000"/>
			<s:Label x="10" y="8" height="24" text="Name" verticalAlign="middle"/>
			<s:TextInput x="48" y="10" width="131"/>
			<s:TextInput x="48" y="36" width="40"/>
			<s:TextInput x="95" y="36" width="39"/>
			<s:Label x="10" y="34" height="24" text="[x, y]" verticalAlign="middle"/>
		</s:NavigatorContent>
		
		<s:NavigatorContent width="100%" height="100%" label="List2">
			<s:DataGrid left="0" right="0" top="0" bottom="0" editable="true" sortableColumns="true">
				<s:ArrayCollection>
					<s:DataItem call="false" key="1000" name="Abrasive" price="100.11"/>
					<s:DataItem call="true" key="1001" name="Brush" price="110.01"/>
					<s:DataItem call="false" key="1002" name="Clamp" price="120.02"/>
					<s:DataItem call="true" key="1003" name="Drill" price="130.03"/>
					<s:DataItem call="false" key="1004" name="Epoxy" price="140.04"/>
					<s:DataItem call="true" key="1005" name="File" price="150.05"/>
					<s:DataItem call="false" key="1006" name="Gouge" price="160.06"/>
					<s:DataItem call="true" key="1007" name="Hook" price="170.07"/>
					<s:DataItem call="false" key="1008" name="Ink" price="180.08"/>
					<s:DataItem call="true" key="1009" name="Jack" price="190.09"/>             
				</s:ArrayCollection>
			</s:DataGrid>
		</s:NavigatorContent>
	</mx:TabNavigator>
	
	<!-- The main canvas component -->
	<s:BorderContainer id="canvas_container" left="145" right="208" top="30" bottom="193">
		<s:layout>
			<s:ConstraintLayout/>
		</s:layout>
		
		<s:Group id="canvas_group" visible="true" left="0" right="0" top="0" bottom="0" width="100%"
				 height="100%">
			<s:Rect width="100%" height="100%">
				<s:fill><s:SolidColor color="0xFFDDCC"/></s:fill>
			</s:Rect>
			
			<!-- The canvas can be rendered to directly and also acts as a container for objects in the DisplayList -->
			<mx:UIComponent id="canvas" visible="true" left="1" right="1" top="1" bottom="1"
							width="100%" height="100%">
			</mx:UIComponent>
		</s:Group>
		
	</s:BorderContainer>
	<!-- ************************* -->
	
	<fx:Script>
		<![CDATA[
			import com.element.Group;
			import com.element.RectangleElement;
			import com.kingnare.skin.spark.Button.Button;
			import com.senocular.display.transform.*;
			import com.ui.SelectionBox;
			
			import mx.collections.ArrayCollection;
			import mx.controls.*;
			import mx.events.*;
			
			public var info:String = "This String is loaded at start";
			private var selectionBox:SelectionBox = new SelectionBox();
			
			public function onCanvasClick(event:MouseEvent) : void {
				
			}
			
			public function onCanvasMouseDown(event:MouseEvent) : void {
				selectionBox.startDragging(event.localX, event.localY);
			}
			
			public function onCanvasMouseMove(event:MouseEvent) : void {
				selectionBox.mouseMove(event.localX, event.localY);
			}
			
			public function onCanvasMouseUp(event:MouseEvent) : void {
				selectionBox.stopDragging(event.localX, event.localY);
			}
			
			public function onCanvasMouseOut(event:MouseEvent) : void {
				
			}
			
			private function menuItemClickHandler(event:MenuEvent):void  {
				var label:String 		= event.item.label;
				menuMain.selectedIndex 	= event.index;
				
				Alert.show("Menu label: " + event.label
					+ "  \nmenu item index within parent menu: " + event.index, "Alert", Alert.OK|Alert.CANCEL);
			}
			
			
			private function applicationReady(event:FlexEvent) : void {

				menuMain.addEventListener(MenuEvent.ITEM_CLICK, menuItemClickHandler);
				
//				var sprite:Sprite = new Sprite();
//				sprite.graphics.beginFill(0xFF0000);
//				sprite.graphics.drawRect(0, 0, 100, 100);
//				
//				canvas.addChild(sprite);
				
				init();
			}
			
			private function init() : void {
				var box:RectangleElement 	= new RectangleElement(null, 100, 100, 50);
				var box2:RectangleElement 	= new RectangleElement(null, 200, 100, 50);
				
				var boxGroup:com.element.Group = new com.element.Group( box, box2);
				boxGroup.addEventListener(MouseEvent.MOUSE_DOWN, onElementSelected);
				
				canvas.addChild(boxGroup);
				
				var tool:TransformTool = new TransformTool(new ControlSetFull());
				timeline.loadFromTimeline(null);
				
				
				canvas.addChild(tool);
				
				boxGroup.addEventListener(MouseEvent.MOUSE_DOWN, tool.select);
				
				canvas_group.addEventListener(MouseEvent.MOUSE_DOWN, tool.deselect);
				canvas_group.addEventListener(MouseEvent.MOUSE_DOWN, onCanvasMouseDown);
				canvas_group.addEventListener(MouseEvent.MOUSE_DOWN, onCanvasMouseMove);
				canvas_group.addEventListener(MouseEvent.MOUSE_DOWN, onCanvasMouseUp);
				canvas_group.addEventListener(MouseEvent.MOUSE_DOWN, onCanvasMouseOut);
				canvas_group.addEventListener(MouseEvent.MOUSE_DOWN, onCanvasMouseDown);
				
			}
			
			private function onElementSelected(event:Event) : void {
				
			}
			
			protected function btn_poly_onClick(event:MouseEvent):void {
				
				
			}
			
		]]>
	</fx:Script>
</s:WindowedApplication>

